@code {
    [Parameter]
    public string? Id { get; set; } = default;

    [Parameter]
    public bool Active { get; set; } = true;

    [Parameter]
    public int Index { get; set; }

    [Parameter]
    public string? Content { get; set; } = default;

    [Parameter]
    public EventCallback<Tuple<int, bool>> OnMovingChanged { get; set; }

    [Parameter]
    public EventCallback<int> OnDroppedToOther { get; set; }

    private bool Moving { get; set; } = false;

    private bool Over { get; set; } = false;

    private async Task OnStart(DragEventArgs evt)
    {
        Moving = true;
        Console.WriteLine($"*{Content}*onStart(label): Moving: *{Moving}*");
        await OnMovingChanged.InvokeAsync(new(Index, Moving));
    }

    private void OnEnter(DragEventArgs evt)
    {
        if (!Moving)
        {
            Over = true;
            Console.WriteLine($"*{Content}*onEnter(label)");
        };
    }

    private void OnLeave(DragEventArgs evt)
    {
        if (!Moving)
        {
            Over = false;
            Console.WriteLine($"*{Content}*onLeave(label)");
        };
    }

    private async Task OnDrop(DragEventArgs evt)
    {
        bool self = Moving;

        Moving = false;
        Over = false;

        if (!self)
        {
            await OnDroppedToOther.InvokeAsync(Index);
        }

        Console.WriteLine($"*{Content}*onDrop(label)");

    }

    private async Task OnEnd(DragEventArgs evt)
    {
        Moving = false;
        Console.WriteLine($"*{Content}*onEnd(label): Moving: *{Moving}*");
        await OnMovingChanged.InvokeAsync(new(Index, Moving));
    }

    private string CssHelper()
    {
        return $"{(!Active ? "" : Moving ? "dragging" : "draggable")} {(Over ? "over" : "")}".Trim();
    }
}


<th id=@Id
    draggable=@Active.ToString().ToLower()
    class=@($"drag-item {CssHelper()}")
    @ondragstart=OnStart
    @ondrop=OnDrop
    @ondragenter=OnEnter
    @ondragleave=OnLeave
    @ondragend=OnEnd
    @ondragover=@(e=>{})
    @ondragover:preventDefault>
    @Content
</th>

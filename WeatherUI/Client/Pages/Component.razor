@page "/component"


@using System.Text.Json;
@using System.Text.Json.Serialization;

@code {
    public record Item(int Index, string Label)
    {
        public int Index { get; set; } = Index;
    };

    public Component()
    {
        Items = new() {
            new (0, "1"),
            new (1, "2"),
            new (2, "3"),
            new (3, "4"),
            new (4, "5"),
            new (5, "6"),
            new (6, "7"),
        };
    }

    public List<Item> Items { get; }

    private int? StartedIndex { get; set; }

    private int? MinIndex { get => Items.MinBy(i => i.Index)?.Index; }

    private int? MaxIndex { get => Items.MaxBy(i => i.Index)?.Index; }

    private void ItemMovingChange(Tuple<int, bool> change)
    {
        Console.WriteLine($"-ItemMovingChange: {change}");
        StartedIndex = change.Item2 ? change.Item1 : null;
    }

    private void ItemDropedOn(int index)
    {
        Console.WriteLine($"-ItemDropedOn, dropped: {index}; starter: {StartedIndex!.Value}");

        ChnageIndices(index);

        StartedIndex = null;
    }

    private void ChnageIndices(int targetIndex)
    {
        Item starter = Items.Single(i => i.Index == StartedIndex);

        if (StartedIndex < targetIndex)
        {
            Items.Where(i => i.Index > StartedIndex && i.Index <= targetIndex)
                .ToList().ForEach(i => i.Index--);
        }
        else
        {
            Items.Where(i => i.Index < StartedIndex && i.Index >= targetIndex)
                .ToList().ForEach(i => i.Index++);
        }

        starter.Index = targetIndex;
    }
}


<PageTitle>Drag & Drop Sample</PageTitle>

<div class="area">
    @foreach (Item i in Items.OrderBy(i => i.Index))
    {
        string elemId = $"dragItem_{i.Label}";

        <DragItem @key=elemId
              Active=@true
              Index=@i.Index
              Content=@i.Label
              OnDroppedToOther=@ItemDropedOn
              OnMovingChanged=@ItemMovingChange />
    }
</div>


<style>
    .area {
        border: 1px solid black;
        height: 400px;
    }

    .drag-item {
        margin: 1rem 0;
        height: 50px;
        width: 50px;
        border: 1px solid violet;
    }

    .dragging ~ .over {
        border-right: 2px solid red;
    }

    .over:not(.dragging ~ .over) {
        border-left: 2px solid red;
    }
</style>